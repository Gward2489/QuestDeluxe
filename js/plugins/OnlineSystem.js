var Plugins=function(e){var t={};function a(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,a),n.l=!0,n.exports}return a.m=e,a.c=t,a.d=function(e,t,r){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(a.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)a.d(r,n,function(t){return e[t]}.bind(null,n));return r},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=0)}([function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.$onlineParty=t.$gameNetwork=void 0;var r=a(2),n=a(3);o(a(1)),o(a(5));function o(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&(t[a]=e[a]);return t.default=e,t}t.$gameNetwork=i,t.$onlineParty=s;var i=null,s=null,c=DataManager.createGameObjects;DataManager.createGameObjects=function(){c.call(this),t.$gameNetwork=i=i||new r.Game_Network,t.$onlineParty=s=s||new n.Online_Party}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Game_NetworkPlayer=t.Game_Map=t.Game_Player=t.Spriteset_Map=t.Scene_Map=void 0;var r=a(0);t.Scene_Map=Scene_Map,t.Spriteset_Map=Spriteset_Map,t.Game_Player=Game_Player,t.Game_Map=Game_Map,t.Game_NetworkPlayer=o;var n=Scene_Map.prototype.onMapLoaded;function o(){this.initialize.apply(this,arguments)}Scene_Map.prototype.onMapLoaded=function(){if(n.call(this),$gameMap._mapId!==r.$gameNetwork.currentMapId){var e=r.$gameNetwork.GetPlayerCasterData();r.$gameNetwork.mapConnection.invoke("RemoveFromMapGroup","mapRoom"+r.$gameNetwork.currentMapId,JSON.stringify(e));for(var t=[],a=0;a<$dataMap.events.length;a++)null!==$dataMap.events[a]&&!0===$dataMap.events[a]._isNetworkPlayerEvent&&t.push(a);t.length>0&&t.forEach(function(e){$dataMap.events.splice(e,1)});for(var o=[],i=1;i<$gameMap._events.length;i++)$gameMap._events[i]._accountUserName&&!0===$gameMap._events[i]._isNetworkPlayerEvent&&o.push(i);o.length>0&&o.forEach(function(e){$gameMap._events.splice(e,1)});var s=[],c=r.$gameNetwork.networkMapEvents;for(var l in c)c.hasOwnProperty(l)&&!0===c[l]._isNetworkPlayerEvent&&s.push(c[l]._accountUserName);s.length>0&&s.forEach(function(e){delete r.$gameNetwork.networkMapEvents[e]}),SceneManager._scene._spriteset.clearAllNetworkPlayerEvents(),r.$gameNetwork.currentMapId=$gameMap._mapId,r.$gameNetwork.mapConnection.invoke("AddToMapGroup","mapRoom"+r.$gameNetwork.currentMapId,JSON.stringify(e))}r.$gameNetwork.game_loaded=!0},Spriteset_Map.prototype.clearNetworkPlayer=function(e){for(var t=0;t<this._characterSprites.length;t++){this._characterSprites[t]._character._accountUserName===e&&this._tilemap.removeChild(this._characterSprites[t])}},Spriteset_Map.prototype.clearAllNetworkPlayerEvents=function(){for(var e=0;e<this._characterSprites.length;e++){!0===this._characterSprites[e]._character._isNetworkPlayerEvent&&this._tilemap.removeChild(this._characterSprites[e])}},Game_Player.prototype.UpdateNetworkPlayer=function(e){var t=e.accountUserName,a=r.$gameNetwork.networkMapEvents;a[t].setMoveSpeed(e.moveSpeed),a[t].setMoveFrequency(e.moveFrequenzy),a[t].moveStraight(e.direction),a[t].x===e.x&&a[t].y===e.y||a[t].setPosition(e.x,e.y),a[t]._characterName=e.characterName,a[t]._characterIndex=e.characterIndex},Game_Player.prototype.moveByInput=function(){if(!this.isMoving()&&this.canMove()){var e=this.getInputDirection();if(e>0)$gameTemp.clearDestination();else if($gameTemp.isDestinationValid()){var t=$gameTemp.destinationX(),a=$gameTemp.destinationY();e=this.findDirectionTo(t,a)}if(e>0){if(this.executeMove(e),r.$gameNetwork.currentMapId!==$gameMap._mapId){var n=r.$gameNetwork.GetPlayerCasterData();try{r.$gameNetwork.mapConnection.invoke("RemoveFromMapGroup","mapRoom"+r.$gameNetwork.currentMapId,JSON.stringify(n))}catch(e){console.error(e.toString())}r.$gameNetwork.currentMapId=$gameMap._mapId;try{r.$gameNetwork.mapConnection.invoke("AddToMapGroup","mapRoom"+r.$gameNetwork.currentMapId,JSON.stringify(n))}catch(e){console.error(e.toString())}}var o=r.$gameNetwork.GetPlayerCasterData(),i="mapRoom"+$gameMap._mapId;r.$gameNetwork.mapConnection.invoke("BroadcastToMapGroup",i,JSON.stringify(o))}}},Game_Player.prototype.seedNewPlayerEvent=function(e,t,a){var r=$dataMap.events.length,n='{"id":'+r+',"name":"'+a+'","note":"","pages":[{"conditions":{"actorId":1,"actorValid":false,"itemId":1,"itemValid":false,"selfSwitchCh":"A","selfSwitchValid":false,"switch1Id":1,"switch1Valid":false,"switch2Id":1,"switch2Valid":false,"variableId":1,"variableValid":false,"variableValue":0},"directionFix":false,"image":{"characterIndex":0,"characterName":"","direction":2,"pattern":0,"tileId":0},"list":[{"code":0,"indent":0,"parameters":[]}],"moveFrequency":3,"moveRoute":{"list":[{"code":0,"parameters":[]}],"repeat":true,"skippable":false,"wait":false},"moveSpeed":3,"moveType":0,"priorityType":0,"stepAnime":false,"through":false,"trigger":0,"walkAnime":true}],"x":'+e+',"y":'+t+',"meta":{},"_isNetworkPlayerEvent":true}';return $dataMap.events.push(JSON.parse(n)),r},Game_Map.prototype.addNetworkPlayer=function(e,t,a){var r=Game_Player.prototype.seedNewPlayerEvent(e,t,a),n=this._events.length;return this._events[n]=new o(this._mapId,r,e,t),this._events[n]._accountUserName=a,this._events[n]._isNetworkPlayerEvent=!0,SceneManager._scene._spriteset.createNetworkPlayer(n,a),this._events[n]},Spriteset_Map.prototype.createNetworkPlayer=function(e,t){var a=$gameMap._events[e],r=this._characterSprites.length;this._characterSprites[r]=new Sprite_Character(a),this._characterSprites[r]._accountUserName=t,this._characterSprites[r].update(),this._tilemap.addChild(this._characterSprites[r])},o.prototype=Object.create(Game_Event.prototype),o.prototype.constructor=o,o.prototype.initialize=function(e,t,a,r){Game_Event.prototype.initialize.call(this,e,t),this._isNetworkPlayer=!0,this.setPosition(a,r)}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Game_Network=void 0;var r=a(0),n=(a(1),n||{});function o(){this.initialize.apply(this,arguments)}n.OnlineCore=!0,t.Game_Network=o,o.prototype.initialize=function(){this.apiUrl="http://localhost:5000/api",this.token="",this.userEmail="",this.userAccountName="",this.currentMapId=0,this.mapConnection={},this.networkMapEvents={},this.game_loaded=!1,this.loadedGames=[]},o.prototype.connectMapSocketAfterLogin=function(){var e=(new signalR.HubConnectionBuilder).withUrl("http://localhost:5000/gameMapHub").build();r.$gameNetwork.mapConnection=e,async function(){try{await r.$gameNetwork.mapConnection.start();var e=r.$gameNetwork.GetPlayerCasterData();r.$gameNetwork.mapConnection.invoke("AddToMapGroup","mapRoom"+r.$gameNetwork.currentMapId,JSON.stringify(e)),r.$gameNetwork.mapConnection.on("NewPlayerOnMap",function(e){var t=JSON.parse(e);0!==t.x&&0!==t.y||(t.x=1,t.y=1);var a=$gameMap.addNetworkPlayer(t.x,t.y,t.accountUserName);r.$gameNetwork.networkMapEvents[t.accountUserName]=a,r.$onlineParty.members.push(a),Game_Player.prototype.UpdateNetworkPlayer(t);var n=o.prototype.GetPlayerCasterData();r.$gameNetwork.mapConnection.invoke("BroadcastToMapGroup","mapRoom"+r.$gameNetwork.currentMapId,JSON.stringify(n))}),r.$gameNetwork.mapConnection.on("PlayerMapUpdate",function(e){if(SceneManager._scene._spriteset&&!(SceneManager._scene instanceof Scene_Battle)){var t=JSON.parse(e);if(r.$gameNetwork.networkMapEvents[t.accountUserName])Game_Player.prototype.UpdateNetworkPlayer(t);else{var a=$gameMap.addNetworkPlayer(t.x,t.y,t.accountUserName);r.$gameNetwork.networkMapEvents[t.accountUserName]=a,r.$onlineParty.members.push(a),Game_Player.prototype.UpdateNetworkPlayer(t)}}}),r.$gameNetwork.mapConnection.on("RemovePlayerFromMap",function(e){for(var t=JSON.parse(e),a=0,n=0;n<$dataMap.events.length;n++)null!==$dataMap.events[n]&&$dataMap.events[n].name===t.accountUserName&&(a=n);$dataMap.events.splice(a,1);for(var o=0,i=1;i<$gameMap._events.length;i++)$gameMap._events[i]._accountUserName&&$gameMap._events[i]._accountUserName===t.accountUserName&&(o=i);$gameMap._events.splice(o,1),delete r.$gameNetwork.networkMapEvents[t.accountUserName],SceneManager._scene._spriteset.clearNetworkPlayer(t.accountUserName)})}catch(e){console.error(e.toString())}}()},o.prototype.CaptureLoginResponse=function(e){r.$gameNetwork.token=e.token,r.$gameNetwork.userEmail=e.email,r.$gameNetwork.userAccountName=e.user},o.prototype.GetPlayerCasterData=function(){return{accountUserName:r.$gameNetwork.userAccountName,direction:$gamePlayer._direction,x:$gamePlayer._x,y:$gamePlayer._y,moveSpeed:$gamePlayer._moveSpeed,moveFrequenzy:$gamePlayer._moveFrequency,characterName:$gamePlayer._characterName,characterIndex:$gamePlayer._characterIndex}},o.prototype.LoadGameFilesFromServer=function(e,t){$.get(r.$gameNetwork.apiUrl+"/GameData/"+e,function(e){console.log(e),t(e)}).fail(function(){window.alert("Load failed")})},o.prototype.SaveGameToServer=function(e){$.ajax({url:r.$gameNetwork.apiUrl+"/GameData/SaveGame",type:"PUT",data:e,contentType:"application/json"})},o.prototype.SaveNewGameToServer=function(e,t){$.ajax({url:r.$gameNetwork.apiUrl+"/GameData/SaveNewGame/"+t,type:"POST",data:e,contentType:"application/json"})},o.prototype.CreateNewUser=function(e,t){$.ajax({url:r.$gameNetwork.apiUrl+"/Accounts/register",type:"POST",data:e,contentType:"application/json",success:function(e){t()},error:function(e){console.log(e)}})},o.prototype.LogUserIn=function(e,t){$.ajax({url:r.$gameNetwork.apiUrl+"/Accounts/login",type:"POST",data:e,contentType:"application/json",success:function(e){r.$gameNetwork.userEmail=e.email,o.prototype.CaptureLoginResponse(e),t()},error:function(e){console.log(e)}})},o.prototype.ClassSelect_old=function(e,t,a){if("Clansmen"===t){var r=[null,{altClassName:""+t,id:1,battlerName:"Actor1_1",characterIndex:0,characterName:"Actor1",classId:1,equips:[1,1,2,3,0],faceIndex:0,faceName:"Actor1",traits:[],initialLevel:1,maxLevel:99,name:""+a,nickname:"",note:"",profile:""}];e.$dataActors=r}else if("Big Hat"===t){var n=[null,{altClassName:""+t,id:2,battlerName:"Actor2_5",characterIndex:4,characterName:"Actor2",classId:3,equips:[3,0,0,0,0],faceIndex:4,faceName:"Actor2",traits:[],initialLevel:1,maxLevel:99,name:""+a,nickname:"",note:"",profile:""}];e.$dataActors=n}else if("Divine"===t){var o=[null,{altClassName:""+t,id:4,battlerName:"Actor2_4",characterIndex:3,characterName:"Actor3",classId:4,equips:[4,0,0,0,0],faceIndex:3,faceName:"Actor3",traits:[],initialLevel:1,maxLevel:99,name:""+a,nickname:"",note:"",profile:""}];e.$dataActors=o}else if("Mercenary"===t){var i=[null,{altClassName:""+t,id:3,battlerName:"Actor1_7",characterIndex:6,characterName:"Actor1",classId:2,equips:[2,0,0,0,0],faceIndex:6,faceName:"Actor1",traits:[],initialLevel:1,maxLevel:99,name:""+a,nickname:"",note:"",profile:""}];e.$dataActors=i}return e},o.prototype.ClassSelect=function(e,t,a){var r=[];"Clansmen"===t?r=[null,{altClassName:""+t,id:1,battlerName:"Actor1_1",characterIndex:0,characterName:"Actor1",classId:1,equips:[1,1,2,3,0],faceIndex:0,faceName:"Actor1",traits:[],initialLevel:1,maxLevel:99,name:""+a,nickname:"",note:"",profile:""}]:"Big Hat"===t?r=[null,{altClassName:""+t,id:2,battlerName:"Actor2_5",characterIndex:4,characterName:"Actor2",classId:3,equips:[3,0,0,0,0],faceIndex:4,faceName:"Actor2",traits:[],initialLevel:1,maxLevel:99,name:""+a,nickname:"",note:"",profile:""}]:"Divine"===t?r=[null,{altClassName:""+t,id:4,battlerName:"Actor2_4",characterIndex:3,characterName:"Actor3",classId:4,equips:[4,0,0,0,0],faceIndex:3,faceName:"Actor3",traits:[],initialLevel:1,maxLevel:99,name:""+a,nickname:"",note:"",profile:""}]:"Mercenary"===t&&(r=[null,{altClassName:""+t,id:3,battlerName:"Actor1_7",characterIndex:6,characterName:"Actor1",classId:2,equips:[2,0,0,0,0],faceIndex:6,faceName:"Actor1",traits:[],initialLevel:1,maxLevel:99,name:""+a,nickname:"",note:"",profile:""}]),$dataActors=r;var n=new Game_Actors,o=new Game_Actor(1),i=Object.assign(o,r[1]);return r[1]=i,n._data=r,e.actors=n,e.dataActors=$dataActors,e},o.prototype.CaptureCoreGameMetaData=function(){r.$gameNetwork.dataFiles=[];for(var e=DataManager.isBattleTest()||DataManager.isEventTest()?"Test_":"",t=0;t<DataManager._databaseFiles.length;t++){var a=DataManager._databaseFiles[t].name,n=DataManager._databaseFiles[t].src;r.$gameNetwork.dataFiles.push([a,e+n])}DataManager.isEventTest()&&r.$gameNetwork.dataFiles.push(["$testEvent",e+"Event.json"])},o.prototype.CreateNewSaveFile=function(e,t,a,n){var o={},i=0,s=r.$gameNetwork.dataFiles.length;r.$gameNetwork.dataFiles.forEach(function(c){var l=new XMLHttpRequest,p="data/"+c[1];l.open("GET",p),l.overrideMimeType("application/json"),l.onload=function(){if(l.status<400&&(i++,o[c[0]]=JSON.parse(l.responseText),i===s)){var p=r.$gameNetwork.ClassSelect(o,t,n),d=JSON.stringify(p);$.ajax({url:r.$gameNetwork.apiUrl+"/GameData/SaveNewGame/"+e,type:"POST",data:d,contentType:"application/json",success:function(){a()}}),i++}},l.onerror=DataManager._mapLoader||function(){DataManager._errorUrl=DataManager._errorUrl||p},l.send()})},o.prototype.PopulateDatabase=function(e){for(var t in e)window[t]=e[t],DataManager.onLoad(window[t])},o.prototype.LoadSavedGame=function(e){DataManager.createGameObjects(),DataManager.extractSaveContents(e),$dataActors=e.dataActors;var t=new Game_Actors,a=new Game_Actor(1);t._data=[null,a],$gameActors=t,console.log(e.actors),r.$gameNetwork.currentMapId=$dataSystem.startMapId,Graphics.frameCount=0,SceneManager.goto(Scene_Map),r.$gameNetwork.connectMapSocketAfterLogin()},o.prototype.CreateNewGame=function(e,t,a,n){var o=DataManager.makeSaveContents(),i=r.$gameNetwork.ClassSelect(o,t,n),s=JsonEx.stringify(i);console.log("yippe"),$.ajax({url:r.$gameNetwork.apiUrl+"/GameData/SaveNewGame/"+e,type:"POST",data:s,processData:!1,contentType:"application/json",success:function(){a()}})}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Online_Party=void 0;var r=a(0),n=a(4);function o(){this.initialize.apply(this,arguments)}t.Online_Party=o,o.prototype.initialize=function(){this.members=[],this.partyConnection={},this.isHost=!1,this.partiesSeeking=[],this.playerOptions=[],this.partyOptions=[],this.currentPartyPortal={}},o.prototype.makeNewPartyConnection=function(e){var t=(new signalR.HubConnectionBuilder).withUrl("http://localhost:5000/onlinePartyHub").build();r.$onlineParty.partyConnection=t,async function(){try{if(r.$onlineParty.partyConnection.start(),e){r.$onlineParty.partyConnection.invoke("AddToPartyAsHost","hello"),r.$onlineParty.partyConnection.on("NewPartyWithHost",function(e){"hello"==e&&(r.$onlineParty.isHost=!0)})}}catch(e){console.error(e.toString())}}()},o.prototype.makeOnlinePartyPortal=function(){r.$onlineParty.populatePlayerOptions();var e=new n.PartyPortalWindow(300,300);r.$onlineParty.currentPartyPortal=e,r.$onlineParty.currentPartyPortal.clearCommandList(),r.$onlineParty.currentPartyPortal.makeCommandList(),r.$onlineParty.currentPartyPortal.setHandler("addPlayerToParty",this.addPlayerToParty.bind(this)),SceneManager._scene.addChild(e)},o.prototype.populatePlayerOptions=function(){var e=r.$gameNetwork.networkMapEvents;for(var t in r.$onlineParty.playerOptions=[],e){var a=e[t];r.$onlineParty.playerOptions.push(a)}},o.prototype.addPlayerToParty=function(e){console.log("score");this.currentPartyPortal.currentExt()},o.prototype.newPartyAsHost=function(){},o.prototype.joinParty=function(){},o.prototype.createNewOnlinePartyMember=function(){}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.PartyPortalWindow=void 0;var r=a(0);function n(e,t){Window_Command.prototype.initialize.call(this,e,t,100,100)}t.PartyPortalWindow=n,n.prototype=Object.create(Window_Command.prototype),n.prototype.constructor=n,n.prototype.initialize=function(){},n.prototype.makeCommandList=function(){this.makeCharacterCommands()},n.prototype.populatePlayerOptions=function(){var e=r.$gameNetwork.networkMapEvents;for(var t in e){var a=e[t];r.$onlineParty.playerOptions.push(a)}},n.prototype.populatePartyOptions=function(){var e=this;r.$onlineParty.openParties.forEach(function(t){e.partyOptions.push(t)})},n.prototype.makeCharacterCommands=function(){var e=this;r.$onlineParty.playerOptions.forEach(function(t){e.addCommand(""+t._accountUserName,"addPlayerToParty",!0,""+t._accountUserName)})}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Input=t.QuestDeluxePortal=void 0;var r=a(0);function n(){this.initialize.apply(this,arguments)}t.QuestDeluxePortal=n,t.Input=Input,n.prototype=Object.create(Scene_Base.prototype),n.prototype.constructor=n,n.prototype.initialize=function(){Scene_Base.prototype.initialize.call(this)},n.prototype.reBindInput=function(){Input.initialize()},n.prototype.create=function(){Scene_Base.prototype.create.call(this),this.createBackground()},n.prototype.reBindInput=function(){Input.initialize()},n.prototype.start=function(){Scene_Base.prototype.start.call(this),SceneManager.clearStack(),this.startFadeIn(this.fadeSpeed(),!1),this.LoginForm()},n.prototype.update=function(){Scene_Base.prototype.update.call(this)},n.prototype.isBusy=function(){return Scene_Base.prototype.isBusy.call(this)},n.prototype.terminate=function(){Scene_Base.prototype.terminate.call(this),SceneManager.snapForBackground()},n.prototype.createNewSaveFile=function(e){var t={};return t.system=$gameSystem,t.screen=$gameScreen,t.timer=$gameTimer,t.switches=$gameSwitches,t.variables=$gameVariables,t.selfSwitches=$gameSelfSwitches,t.actors=e,t.party=$gameParty,t.map=$gameMap,t.player=$gamePlayer,JSON.stringify(t)},n.prototype.RegistrationSuccess=function(){var e=Graphics.boxWidth-Graphics.boxWidth/3;$("#ErrorPrinter").html('<div class="registrationSuccessWrapper" style="width:'+e+'px">\n            <div class="registrationSuccessInnerWrapper">\n                <div class="registrationSuccessTextWrapper">\n                    <div class="registrationSuccessText">\n                        Registration Succesful! \n                    </div>\n                </div>\n                <div class="registrationSuccessButtonWrapper">\n                    <button class="registrationSuccessButton">\n                        LOG IN\n                    </button>\n                </div>\n            </div>\n        </div>\n        '),$(".registrationSuccessButton").click(function(){n.prototype.LoginForm()})},n.prototype.RegistrationForm=function(){var e=this,t=Graphics.boxWidth-Graphics.boxWidth/3;$("#ErrorPrinter").html('<div id="RegisterForm" style="width:'+t+'px">\n            <div class="registrationWrapper">\n                <div>\n                    <div class="register-text">\n                        Provide your email address, a desired user name, and a password. \n                    </div>\n                </div>\n\n                <div class="emailWrapper">\n                    <div class="emailInput">\n                        <input class="emailText" placeholder="email">\n                    </div>\n                </div>\n                <div class="accountNameWrapper">\n                    <div class="accountNameInput">\n                        <input class="accountNameText" placeholder="user name">\n                    </div>\n                </div>\n                <div class="passwordWrapper">\n                    <div class="passwordInput">\n                        <input class="passwordText" type="password" placeholder="password">\n                    </div>\n                </div>\n                <div class="registerButtonWrapper">\n                    <div class="registerButton">\n                        <button class="registerSubmitButton">\n                            REGISTER NOW\n                        </button>\n                    </div>\n                </div>\n                <div class="toLoginButtonWrapper">\n                    <div class="toLoginButton">\n                        <button class="toLoginSubmitButton">\n                            LOGIN PORTAL\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>');$(".registerSubmitButton").click(function(t){var a=function(){var e=$(".emailText").val(),t={accountName:$(".accountNameText").val(),password:$(".passwordText").val(),email:e};return JSON.stringify(t)}();r.$gameNetwork.CreateNewUser(a,e.RegistrationSuccess)}),$(".toLoginButton").click(function(e){n.prototype.LoginForm()})},n.prototype.LoginForm=function(){var e=this,t=Graphics.boxWidth-Graphics.boxWidth/3;$("#ErrorPrinter").html('<div id="LoginForm" style="width:'+t+'px">\n            <div class="LoginWrapper">\n                <div>\n                    <div class="welcome-text">\n                        Welcome. Log In below, or click the Sign Up button to create a new account. \n                    </div>\n                </div>\n                <div class="loginEmailWrapper">\n                    <div class="loginEmailInput">\n                        <input class="loginEmailText" placeholder="email">\n                    </div>\n                </div>\n                <div class="loginPasswordWrapper">\n                    <div class="loginPasswordInput">\n                        <input class="loginPasswordText" placeholder="password" type="password">\n                    </div>\n                </div>\n                <div class="loginButtonWrapper">\n                    <div class="loginButton">\n                        <button class="loginSubmitButton">\n                            LOGIN\n                        </button>\n                    </div>\n                </div>\n                <div class="toRegisterWrapper">\n                    <div class="toRegisterButton">\n                        <button class="toRegisterSubmitButton">\n                            SIGN UP!\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>');$(".loginSubmitButton").click(function(t){var a=function(){var e={email:$(".loginEmailText").val(),password:$(".loginPasswordText").val()};return JSON.stringify(e)}();r.$gameNetwork.LogUserIn(a,e.CharacterSelect)}),$(".toRegisterSubmitButton").click(function(e){n.prototype.RegistrationForm()})},n.prototype.CharacterSelect=function(){var e=Graphics.boxWidth-Graphics.boxWidth/3;$("#ErrorPrinter").html('<div id="CharacterSelectScreen" style="width:'+e+'px">\n            <div class="charSelectWrapper">\n                <div class="welcome-text">\n                    Select your character, or create a new one by clicking the new character button. \n                </div>\n                <div class="charSelectButtonsWrapper">\n                    <div class="charSelectButtons">\n                        <button class="newCharacterButton">\n                            NEW CHARACTER\n                        </button>\n                        <button class="logoutButton">\n                            LOG OUT\n                        </button>\n                        <button class="accountOptionsButton">\n                            OPTIONS\n                        </button>\n                    </div>\n                </div>\n                <div class="charactersTableWrapper">\n                    <div class="charactersTableContainer">\n                        <table style="width:100%" class="charactersTable">\n                            <tr>\n                                <th>Select</th>\n                                <th>Level</th> \n                                <th>Class</th>\n                                <th>Character Name</th>\n                            </tr>\n                        </table>\n                        <div class="charactersLoading">\n                            <div>\n                                Loading your characters...\n                            </div>\n                            <div style="margin-top:12px;">\n                                <img src="../extra_images/loading.gif" alt="loading-gif" height="50px" width="50px">\n                            </div>\n                        </div>\n                    </div>\n                    </div>\n                </div> \n            </div>\n        </div>'),$(".charactersTable").hide();r.$gameNetwork.LoadGameFilesFromServer(r.$gameNetwork.userEmail,function(e){$(".charactersLoading").hide(),$(".charactersTable").show(),r.$gameNetwork.loadedGames=[];var t=1;r.$gameNetwork.loadedGames.push(null),e.forEach(function(e){var a=JsonEx.parse(e);r.$gameNetwork.loadedGames.push(a);var o=a.actors._data[1];$(".charactersTable").append(' \n            <tr>\n                <td><button class="game'+t+'">CHOOSE</button></td>\n                <td>'+o.initialLevel+"</td> \n                <td>"+o.altClassName+"</td>\n                <td>"+o.name+"</td>\n            </tr>\n            "),$(".game"+t).attr("gameIndex",""+t).click(function(e){$("#ErrorPrinter").html(""),n.prototype.reBindInput();var t=Number($(e.currentTarget).attr("gameIndex")),a=r.$gameNetwork.loadedGames[t];r.$gameNetwork.LoadSavedGame(a)}),t++})}),$(".newCharacterButton").click(function(){n.prototype.NewCharacter()})},n.prototype.runLoadedFile=function(e){Object.assign($gameSystem,e.system),Object.assign($gameScreen,e.screen),Object.assign($gameTimer,e.timer),Object.assign($gameSwitches,e.switches),Object.assign($gameVariables,e.variables),Object.assign($gameSelfSwitches,e.selfSwitches),Object.assign($gameActors,e.actors),Object.assign($gameParty,e.party),Object.assign($gameMap,e.map),Object.assign($gamePlayer,e.player)},n.prototype.NewCharacter=function(){var e=Graphics.boxWidth-Graphics.boxWidth/3;$("#ErrorPrinter").html('<div id="NewCharacterScreen" class="panel panel-primary" style="width:'+e+'px">\n            <div class="newCharacterWrapper">\n                <div class="nameWarning">\n                    <div class="infoText">\n                        You must enter a name for your character\n                    </div>\n                    <div>\n                    <button class="confirmNameWarning">\n                        OK\n                    </button>\n                    </div>   \n                </div>\n                <div class="charSelectMain">\n                    <div class="infoTextWrapper">\n                        <div class="infoTextInnerWrapper">\n                            <div class="infoText">\n                                Enter a character name and select your base class\n                            </div>\n                        </div>\n                    </div>\n                    <div class="characterNameWrapper">\n                        <div class="characterNameInput">\n                            <input class="characterNameInputText" type="text" placeholder="character name">\n                        </div>\n                    </div>\n\n                    <div class="clansmanClassWrapper">\n                        <div class="clansmanClassInnerWrapper">\n                            <button class="clansmenButton">\n                                CLANSMEN\n                            </button>\n                        </div>\n                    </div>\n\n                    <div class="bighatClassWrapper">\n                        <div class="bighatClassInnerWrapper">\n                            <button class="bighatButton">\n                                BIG HAT\n                            </button>\n                        </div>\n                    </div>\n\n                    <div class="divineClassWrapper">\n                        <div class="divinClassInnerWrapper">\n                            <button class="divineClassButton">\n                                DIVINE\n                            </button>\n                        </div>\n                    </div>\n\n                    <div class="mercenaryClassWrapper">\n                        <div class="mercenaryClassInnerWrapper">\n                            <button class="mercenaryClassButton">\n                                MERCENARY\n                            </button>\n                        </div>\n                    </div>     \n                </div>\n            </div>\n        </div>'),$(".nameWarning").hide();var t=function(){return $(".characterNameInputText").val()};$(".confirmNameWarning").click(function(){$(".nameWarning").hide(),$(".charSelectMain").show()}),$(".clansmenButton").click(function(){var e=t();if(""===e)return $(".charSelectMain").hide(),void $(".nameWarning").show();r.$gameNetwork.CreateNewGame(r.$gameNetwork.userEmail,"Clansmen",n.prototype.CharacterSelect,e),n.prototype.loadingScreen()}),$(".bighatButton").click(function(){var e=t();if(""===e)return $(".charSelectMain").hide(),void $(".nameWarning").show();r.$gameNetwork.CreateNewGame(r.$gameNetwork.userEmail,"Big Hat",n.prototype.CharacterSelect,e),n.prototype.loadingScreen()}),$(".divineClassButton").click(function(){var e=t();if(""===e)return $(".charSelectMain").hide(),void $(".nameWarning").show();r.$gameNetwork.CreateNewGame(r.$gameNetwork.userEmail,"Divine",n.prototype.CharacterSelect,e),n.prototype.loadingScreen()}),$(".mercenaryClassButton").click(function(){var e=t();if(""===e)return $(".charSelectMain").hide(),void $(".nameWarning").show();r.$gameNetwork.CreateNewGame(r.$gameNetwork.userEmail,"Mercenary",n.prototype.CharacterSelect,e),n.prototype.loadingScreen()})},n.prototype.loadingScreen=function(){var e=Graphics.boxWidth-Graphics.boxWidth/3;$("#ErrorPrinter").html('<div id="loadingScreen" style="width:'+e+'px">\n            <div class="loadingScreenWrapper">\n                <div>\n                    Creating New Game...\n                </div>\n                <div style="margin-top:12px;">\n                    <img src="../extra_images/loading.gif" alt="loading-gif" height="80px" width="80px">\n                </div>\n            </div>\n        </div>')},n.prototype.createBackground=function(){this._backSprite1=new Sprite(ImageManager.loadTitle1($dataSystem.title1Name)),this._backSprite2=new Sprite(ImageManager.loadTitle2($dataSystem.title2Name)),this.addChild(this._backSprite1),this.addChild(this._backSprite2),this.centerSprite(this._backSprite1),this.centerSprite(this._backSprite2),this.createForeground()},n.prototype.createForeground=function(){this._gameTitleSprite=new Sprite(new Bitmap(Graphics.width,Graphics.height)),this.addChild(this._gameTitleSprite),$dataSystem.optDrawTitle&&this.drawGameTitle()},n.prototype.drawGameTitle=function(){var e=Graphics.height/4,t=Graphics.width-40,a=$dataSystem.gameTitle;this._gameTitleSprite.bitmap.outlineColor="black",this._gameTitleSprite.bitmap.outlineWidth=8,this._gameTitleSprite.bitmap.fontSize=72,this._gameTitleSprite.bitmap.drawText(a,20,e,t,48,"center")},n.prototype.centerSprite=function(e){e.x=Graphics.width/2,e.y=Graphics.height/2,e.anchor.x=.5,e.anchor.y=.5},n.prototype.playTitleMusic=function(){AudioManager.playBgm($dataSystem.titleBgm),AudioManager.stopBgs(),AudioManager.stopMe()},Scene_Boot.prototype.start=function(){Scene_Base.prototype.start.call(this),SoundManager.preloadImportantSounds(),DataManager.isBattleTest()?(DataManager.setupBattleTest(),SceneManager.goto(Scene_Battle)):DataManager.isEventTest()?(DataManager.setupEventTest(),SceneManager.goto(Scene_Map)):(this.checkPlayerLocation(),DataManager.setupNewGame(),SceneManager.goto(n)),this.updateDocumentTitle()},Input._onKeyDown=function(e){this._shouldPreventDefault(e)&&e.preventDefault(),144===e.keyCode&&this.clear();var t=this.keyMapper[e.keyCode];t&&(this._currentState[t]=!0)},Input._shouldPreventDefault=function(e){switch(e.keyCode){case 8:if($(e.target).is("input, textarea"))break;case 33:case 34:case 37:case 38:case 39:case 40:return!0}return!1}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,